{"version":3,"sources":["App/components/base/RolMenuAccesoUpSert.js","App/components/base/RolMenuAccesoListar.js","App/pages/RolMenuAccesoPage.js","App/components/base/NoAutorizado.js","helpers/estiloTabla.js"],"names":["RolMenuAccesoUpSert","dataInicial","abrirModal","setAbrirModal","catMenu","GetRolMenuAcceso","rolMenuAcceso","dispatch","useDispatch","state","useSelector","useState","loading","setLoading","accesos","setAccesos","useForm","values","handleOnChange","menuId","setMenuid","menuAcceso","setMenuAcceso","NuevoRegistro","a","callApi","method","body","JSON","stringify","alert_exitoso","UpdateUserInfo","rolId","ActualizarRegistro","response","handleOnSubmit","e","preventDefault","rol_menu_accesoId","GetMenuAcceso","id","find","acceso","accesoId","auxMenuAcceso","map","menu_accesoId","descripcion","Acceso","i","estadoId","aux","push","useEffect","misAccesos","filter","item","GetAccesosByMenuId","Modal","show","onHide","Loading","Header","closeButton","Title","as","Body","onSubmit","onErrorSubmit","formData","errorInputs","alert_warning","Form","Row","Group","Col","md","Label","htmlFor","name","value","required","errorMessage","onChange","target","key","className","type","onClick","RolMenuAccesoListar","idrol","setCatMenu","setRolMenuAcceso","infoRol","setInfoRol","initData","setdataInicial","GetCatMenu","limpiarEstiloTabla","asignarEstiloTabla","GetInfoRol","nombre","sm","Card","Button","variant","Table","striped","hover","responsive","bordered","MenuAcceso","descMenu","Menu","desAcceso","descEstado","Estado","style","textAlign","handleEditar","withReactContent","Swal","fire","title","text","showCloseButton","showCancelButton","then","willDelete","listActual","NoAutorizado","RolMenuAccesoPage","match","params","codigoRol","atob","split","Heading","$","DataTable","require","selector","filas","searching","bLengthChange","bAutoWidth","lengthMenu","displayLength","language","processing","search","info","infoEmpty","infoFiltered","infoPostFix","loadingRecords","zeroRecords","emptyTable","paginate","first","previous","next","last","aria","sortAscending","sortDescending","destroy"],"mappings":"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","file":"static/js/21.070f2876.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Col, Form, Modal } from 'react-bootstrap';\r\nimport { ValidationForm, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { UpdateUserInfo } from '../../../actions/auth';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Loading from './Loading';\r\nconst menuIdMenuAcceso = 19;\r\nexport const RolMenuAccesoUpSert = ({ dataInicial, abrirModal, setAbrirModal, catMenu, GetRolMenuAcceso, rolMenuAcceso }) => {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => state);\r\n    const [loading, setLoading] = useState(false)\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [values, handleOnChange] = useForm(dataInicial);\r\n    const [menuId, setMenuid] = useState(dataInicial.menuId);\r\n    const [menuAcceso, setMenuAcceso] = useState([]);\r\n\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => (item.menuId === menuIdMenuAcceso));\r\n            setAccesos(misAccesos);\r\n        }\r\n    }\r\n\r\n    const NuevoRegistro = async () => {\r\n        let response = await callApi('rolmenuacceso', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(\"Permiso registrado exitosamente\");\r\n            dispatch(UpdateUserInfo());\r\n            GetRolMenuAcceso(dataInicial.rolId);\r\n            setAbrirModal(false);\r\n        }\r\n    }\r\n    const ActualizarRegistro = async () => {\r\n        let response = await callApi('rolmenuacceso', {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(response);\r\n            dispatch(UpdateUserInfo());\r\n            GetRolMenuAcceso(dataInicial.rolId);\r\n        }\r\n        setAbrirModal(false);\r\n    }\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (dataInicial.rol_menu_accesoId > 0) {\r\n            await ActualizarRegistro();\r\n        } else {\r\n            await NuevoRegistro();\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete toda la información solicitada por el formulario\");\r\n    };\r\n\r\n    const handleMenuSeleccionado = ({ target: { value } }) => {\r\n        setMenuid(value);\r\n    }\r\n\r\n    const GetMenuAcceso = async (id) => {\r\n        if (accesos.find(acceso => acceso.menuId === menuIdMenuAcceso && acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            let response = await callApi(`menuacceso?menuId=${id}&estadoId=1`);\r\n            let auxMenuAcceso = [];\r\n            if (response) {\r\n                response.map(({ menu_accesoId, Acceso: { descripcion } }) => {\r\n                    const existe = rolMenuAcceso.find(i => i.menu_accesoId === menu_accesoId && (i.estadoId === 1 || i.estadoId === 2) && i.menu_accesoId !== dataInicial.menu_accesoId);\r\n                    if (!existe) {\r\n                        let aux = {\r\n                            menu_accesoId,\r\n                            descripcion\r\n                        }\r\n                        auxMenuAcceso.push(aux);\r\n                    }\r\n                });\r\n                setMenuAcceso(auxMenuAcceso);\r\n            }\r\n        } else {\r\n            setMenuAcceso([{ menu_accesoId: '', descripcion: 'No esta autorizado' }]);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, []);\r\n    useEffect(() => {\r\n        GetMenuAcceso(menuId);\r\n    }, [menuId, accesos])\r\n\r\n    const errorMessage = \"Campo obligatorio\";\r\n    return (\r\n        <Modal show={abrirModal} onHide={() => setAbrirModal(false)}>\r\n            {\r\n                loading === true ?\r\n                    <Loading />\r\n                    : <>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title as=\"h5\">{dataInicial.rol_menu_accesoId > 0 ? 'Actualizar Permiso' : 'Nuevo Permiso'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ValidationForm onSubmit={handleOnSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"menuId\">Menu</Form.Label>\r\n                                        <SelectGroup\r\n                                            name=\"menuId\"\r\n                                            id=\"menuId\"\r\n                                            value={menuId}\r\n                                            required\r\n                                            errorMessage={errorMessage}\r\n                                            onChange={handleMenuSeleccionado}>\r\n                                            <option value=\"\">Seleccione un menu</option>\r\n                                            {\r\n                                                catMenu.map(({ menuId, descripcion }) => (\r\n                                                    <option value={menuId} key={menuId}>{descripcion}</option>\r\n                                                ))\r\n                                            }\r\n                                        </SelectGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"menu_accesoId\">Acceso</Form.Label>\r\n                                        <SelectGroup\r\n                                            name=\"menu_accesoId\"\r\n                                            id=\"menu_accesoId\"\r\n                                            value={values.menu_accesoId}\r\n                                            required\r\n                                            errorMessage={errorMessage}\r\n                                            onChange={handleOnChange}>\r\n                                            <option value=\"\">Seleccione un permiso</option>\r\n                                            {\r\n                                                menuAcceso.map(({ menu_accesoId, descripcion }) => (\r\n                                                    <option value={menu_accesoId} key={menu_accesoId}>{descripcion}</option>\r\n                                                ))\r\n                                            }\r\n                                        </SelectGroup>\r\n                                    </Form.Group>\r\n                                    {\r\n                                        dataInicial.rol_menu_accesoId > 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"estadoId\">Estado</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"estadoId\"\r\n                                                id=\"estadoId\"\r\n                                                value={values.estadoId}\r\n                                                required\r\n                                                errorMessage={errorMessage}\r\n                                                onChange={handleOnChange}>\r\n                                                <option value=\"\">Seleccione un estado</option>\r\n                                                <option value=\"1\">Activo</option>\r\n                                                <option value=\"2\">Inactivo</option>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                    }\r\n                                    <div className=\"col-sm-3\"></div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"button\" onClick={() => { setAbrirModal(false) }} className=\"btn btn-warning\"> Cancelar</button>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"submit\" className=\"btn btn-success\"> {dataInicial.rol_menu_accesoId > 0 ? 'Actualizar' : 'Registrar'}</button>\r\n                                    </div>\r\n                                </Form.Row>\r\n                            </ValidationForm>\r\n                        </Modal.Body>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Card, Button, Table } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector } from 'react-redux';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { RolMenuAccesoUpSert } from './RolMenuAccesoUpSert';\r\nimport { limpiarEstiloTabla, asignarEstiloTabla } from '../../../helpers/estiloTabla';\r\nimport { NoAutorizado } from './NoAutorizado';\r\nimport Loading from './Loading';\r\nconst menuId = 20;\r\nconst menuIdMenu = 21;\r\nconst menuIdRol = 11;\r\nexport const RolMenuAccesoListar = ({ idrol }) => {\r\n    const state = useSelector(state => state);\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [loading, setLoading] = useState(true)\r\n    const [abrirModal, setAbrirModal] = useState(false);\r\n    const [catMenu, setCatMenu] = useState([]);\r\n    const [rolMenuAcceso, setRolMenuAcceso] = useState([]);\r\n    const [infoRol, setInfoRol] = useState([]);\r\n    const initData = {\r\n        menuId: '',\r\n        rolId: idrol,\r\n        menu_accesoId: '',\r\n        estadoId: 1\r\n    };\r\n\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => item.menuId === menuId || item.menuId === menuIdRol || item.menuId === menuIdMenu);\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n    const [dataInicial, setdataInicial] = useState(initData);\r\n    const handleOpenModal = () => {\r\n        setAbrirModal(true);\r\n        setdataInicial(initData);\r\n    }\r\n    const GetCatMenu = async () => {\r\n        if (accesos.find(acceso => acceso.menuId === menuIdMenu && acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            let response = await callApi('menu?estadoId=1');\r\n            if (response) {\r\n                setCatMenu(response);\r\n            }\r\n        } else {\r\n            setCatMenu([{ menuId: '', descripcion: 'No esta autorizado' }]);\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const GetRolMenuAcceso = async (id) => {\r\n        if (accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            let response = await callApi(`rolmenuacceso?rolId=${id}&estadoId=1;2`);\r\n            if (response) {\r\n                limpiarEstiloTabla(\"#mytable\");\r\n                setRolMenuAcceso(response);\r\n                asignarEstiloTabla(\"#mytable\");\r\n            }\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const GetInfoRol = async (id) => {\r\n        if (accesos.find(acceso => acceso.menuId === menuIdRol && acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            let response = await callApi(`rol?id=${id}&include=0`);\r\n            if (response) {\r\n                setInfoRol(response[0]);\r\n            }\r\n        } else {\r\n            setInfoRol([{ nombre: 'No esta autorizado' }]);\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleEditar = (id) => {\r\n        const { rol_menu_accesoId, rolId, menu_accesoId, estadoId, MenuAcceso: { menuId } } = rolMenuAcceso.find(item => item.rol_menu_accesoId === id);\r\n        setdataInicial({\r\n            rol_menu_accesoId,\r\n            menu_accesoId,\r\n            estadoId,\r\n            menuId,\r\n            rolId\r\n        });\r\n        setAbrirModal(true);\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: 'Alerta?',\r\n            text: 'Esta seguro que desea eliminar el elemento',\r\n            type: 'warning',\r\n            showCloseButton: true,\r\n            showCancelButton: true\r\n        }).then(async (willDelete) => {\r\n            if (willDelete.value) {\r\n                let method = 'DELETE';\r\n                let response = await callApi(`rolmenuacceso/${id}`, {\r\n                    method\r\n                });\r\n                if (response) {\r\n                    alert_exitoso(response);\r\n                    let listActual = rolMenuAcceso.filter(item => item.rol_menu_accesoId !== id);\r\n                    setRolMenuAcceso(listActual);\r\n                }\r\n            } else {\r\n                alert_warning('No se eliminó ningún elemento');\r\n            }\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, [state?.accesos]);\r\n\r\n    useEffect(() => {\r\n        GetCatMenu();\r\n    }, [accesos]);\r\n\r\n    useEffect(() => {\r\n        GetInfoRol(idrol);\r\n        GetRolMenuAcceso(idrol);\r\n    }, [idrol, accesos])\r\n    return (\r\n        <Aux>\r\n            {\r\n                loading === true ?\r\n                    <Loading />\r\n                    : <>\r\n                        <Row className='btn-page'>\r\n                            <Col sm={12}>\r\n                                {\r\n                                    accesos.find(acceso => acceso.menuId === menuIdRol && acceso.accesoId === 3) ?\r\n                                        <Card>\r\n                                            <Card.Header>\r\n                                                <Card.Title as=\"h5\">{`${infoRol.nombre}`} Acceso</Card.Title>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Row className=\"align-items-center m-l-0\">\r\n                                                    <Col />\r\n                                                    <Col className=\"text-right\">\r\n                                                        {\r\n                                                            accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 1) &&\r\n                                                            <Button variant=\"success\" className=\"btn-sm btn-round has-ripple\" onClick={handleOpenModal}><i className=\"feather icon-plus\" /> Agregar Acceso</Button>\r\n                                                        }\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                {\r\n                                                    accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 3) ?\r\n                                                        <Table striped hover responsive bordered id=\"mytable\">\r\n                                                            <thead>\r\n                                                                <tr>\r\n                                                                    <th>Código</th>\r\n                                                                    <th>Menu</th>\r\n                                                                    <th>Acceso</th>\r\n                                                                    <th>Estado</th>\r\n                                                                    {\r\n                                                                        accesos.find(acceso => (acceso.menuId === menuId && acceso.accesoId === 2) || (acceso.menuId === menuId && acceso.accesoId === 4)) &&\r\n                                                                        <th></th>\r\n                                                                    }\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {\r\n                                                                    rolMenuAcceso.map(({ rol_menu_accesoId, MenuAcceso: { Menu: { descripcion: descMenu }, Acceso: { descripcion: desAcceso } }, Estado: { descripcion: descEstado } }) => {\r\n                                                                        return (\r\n                                                                            <tr key={rol_menu_accesoId}>\r\n                                                                                <td>{rol_menu_accesoId}</td>\r\n                                                                                <td>{descMenu}</td>\r\n                                                                                <td>{desAcceso}</td>\r\n                                                                                <td>{descEstado}</td>\r\n                                                                                {\r\n                                                                                    accesos.find(acceso => (acceso.menuId === menuId && acceso.accesoId === 2) || (acceso.menuId === menuId && acceso.accesoId === 4)) &&\r\n                                                                                    <td style={{ textAlign: \"center\" }}>\r\n\r\n                                                                                        {\r\n                                                                                            accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 2) &&\r\n                                                                                            <button className=\"btn-icon btn btn-info btn-sm\" onClick={() => { handleEditar(rol_menu_accesoId) }}><i className=\"feather icon-edit\" /></button>\r\n                                                                                        }\r\n                                                                                        {\r\n                                                                                            accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 4) &&\r\n                                                                                            <button className=\"btn-icon btn btn-danger btn-sm\" onClick={() => { handleDelete(rol_menu_accesoId) }}><i className=\"feather icon-trash-2\" /></button>\r\n                                                                                        }\r\n                                                                                    </td>\r\n                                                                                }\r\n                                                                            </tr>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                        </Table>\r\n                                                        : <NoAutorizado />\r\n                                                }\r\n                                                {\r\n                                                    abrirModal === true &&\r\n                                                    <RolMenuAccesoUpSert abrirModal={abrirModal} setAbrirModal={setAbrirModal} catMenu={catMenu} dataInicial={dataInicial} GetRolMenuAcceso={GetRolMenuAcceso} rolMenuAcceso={rolMenuAcceso} />\r\n                                                }\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                        : <NoAutorizado />\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n            }\r\n        </Aux>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { RolMenuAccesoListar } from '../components/base/RolMenuAccesoListar';\r\n\r\nconst RolMenuAccesoPage = ({match}) => {\r\n      let { idrol } = match.params;\r\n    idrol = !idrol ? \"\" : idrol;\r\n   let codigoRol=atob(idrol).split('=')[1];\r\n    return (\r\n      <RolMenuAccesoListar idrol={codigoRol}/>\r\n    )\r\n}\r\n\r\nexport default RolMenuAccesoPage;\r\n","import React from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/_Aux';\r\nexport const NoAutorizado = () => {\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading as=\"h4\">Información!</Alert.Heading>\r\n                        <p>No esta autorizado para poder visualizar los elementos</p>\r\n                        <hr />\r\n                        <p className=\"mb-0\">Comuniquese con el administrador para la asignación de permisos</p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n","import $ from 'jquery';\r\n$.DataTable = require('datatables.net-bs');\r\nrequire('datatables.net-responsive-bs');\r\n\r\nexport const asignarEstiloTabla = (selector,filas=10) => {\r\n    $(selector).DataTable({\r\n        searching: true,\r\n        bLengthChange: false,\r\n        bAutoWidth: false,\r\n        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, \"Todos\"]],\r\n        displayLength: filas,\r\n        language: {\r\n            processing: \"Cargando información\",\r\n            search: \"Filtrar por:\",\r\n            lengthMenu: \"Mostrar _MENU_ filas\",\r\n            info: \"Vizualización  _END_ de _TOTAL_ filas\",\r\n            infoEmpty: \"Vizualización del elemento 0 a 0 de 0 filas\",\r\n            infoFiltered: \"(Filtrado de _MAX_ filas en total)\",\r\n            infoPostFix: \"\",\r\n            loadingRecords: \"Cargando...\",\r\n            zeroRecords: \"No se logró encontrar ninguna coincidencia\",\r\n            emptyTable: \"No existen registros\",\r\n            paginate: {\r\n                first: \"Primera\",\r\n                previous: \"Anterior\",\r\n                next: \"Siguiente\",\r\n                last: \"Ultima\"\r\n            },\r\n            aria: {\r\n                sortAscending: \": active para ordenar la columna en orden ascendente\",\r\n                sortDescending: \": active para ordenar la columna en orden descendente\"\r\n            }\r\n        }\r\n    });\r\n}\r\nexport const limpiarEstiloTabla=(selector)=>{\r\n        $(selector).DataTable().destroy();\r\n}"],"sourceRoot":""}